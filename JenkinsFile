pipeline {
    agent any

    environment {
        JAVA_HOME = "C:\\Program Files\\Java\\jdk-11.0.16.1"
        PATH = "C:\\Windows\\System32;${JAVA_HOME}\\bin;${env.PATH}"
    }

    stages {
        stage('Build and Test') {
            steps {
                echo 'Building and testing the project...'
                script {
                    echo "JAVA_HOME=${env.JAVA_HOME}"
                    echo "PATH=${env.PATH}"

                    // Удаляем старые результаты Allure
                    bat 'rd /s /q build\\allure-results'

                    bat """
                        @echo off
                        echo Running Gradle Build
                        cd C:\\Users\\Sergey\\IdeaProjects\\GradleProject
                        call gradlew.bat clean test --stacktrace --info
                    """
                }
            }
        }
        stage('Allure Report') {
            steps {
                echo 'Generating Allure Report...'
                allure([
                    includeProperties: false,
                    jdk: '',
                    reportBuildPolicy: 'ALWAYS',
                    results: [[path: 'build/allure-results']] // Путь к результатам Allure
                ])
            }
        }
    }

    post {
        success {
            echo 'Build and tests completed successfully.'
        }
        failure {
            echo 'Build or tests failed. Check logs for details.'
            archiveArtifacts artifacts: '**/build/reports/tests/testng/index.html', allowEmptyArchive: true
            archiveArtifacts artifacts: '**/build/allure-results/**', allowEmptyArchive: true
        }
        always {
            // Очистка кеша Gradle
            script {
                try {
                    bat "cd C:\\Users\\Sergey\\IdeaProjects\\GradleProject && call gradlew.bat cleanBuildCache"
                } catch (Exception e) {
                    echo "Failed to clean Gradle cache: ${e.message}"
                }
            }
        }
    }
}






